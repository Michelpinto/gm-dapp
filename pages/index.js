import Head from "next/head";
import Nav from "../src/components/nav/Nav";
import Body from "../src/components/body/Body";
import Card from "../src/components/card/Card";
import { Provider } from "react-redux";
import store from "../model/store";
import { useState } from "react";
import { ethers } from "ethers";

export default function Home() {
    const [connected, setConnected] = useState(false);
    const [balanceAcc, setBalanceAcc] = useState(0);
    const [showAddress, setShowAddress] = useState("Address");

    async function getBalance() {
        if (typeof window.ethereum !== "undefined") {
            const [account] = await window.ethereum.request({
                method: "eth_requestAccounts",
            });
            const provider = new ethers.providers.Web3Provider(window.ethereum);

            provider.getBalance(account).then((balance) => {
                const balanceInEth = ethers.utils.formatEther(balance);
                const sliceEth = balanceInEth.slice(0, 5);
                console.log(`balance: ${sliceEth} ETH`);
                setBalanceAcc(sliceEth);
            });

            provider._getAddress(account).then((address) => {
                const addy = address;
                console.log(addy);
                setShowAddress(addy);
            });
        }
    }

    async function connectWallet() {
        await window.ethereum.request({ method: "eth_requestAccounts" });
        console.log("connected");
        setConnected(true);
        getBalance();
    }

    return (
        <Provider store={store}>
            <div>
                <Head>
                    <title>Gm dapp</title>
                    <meta
                        name="description"
                        content="Generated by create next app"
                    />
                    <link rel="icon" href="/favicon.ico" />
                </Head>

                <Nav connected={connected} connectWallet={connectWallet} />
                <Card
                    showAddress={showAddress}
                    connectWallet={connectWallet}
                    balanceAcc={balanceAcc}
                />
                <Body connected={connected} connectWallet={connectWallet} />
            </div>
        </Provider>
    );
}
